version: "3.4"

services:
  backend:
    container_name: nav_backend
    env_file: .env
    environment: 
        - DEBUGPY=${DEBUGPY}
    user: ${CURRENT_UID}
    build:
      context: .
      args:
        - DEBUG=${DEBUG}
      target: deploy
    restart: on-failure
    volumes:
      - .:/app/
      - ./static:/app/static
    ports:
        - 5678:5678
    networks:
      private_network:
        ipv4_address: 172.20.0.5

  postgres:
    container_name: nav_postgres
    env_file: .env
    image: postgres:12.3-alpine
    restart: on-failure
    volumes:
      - nav_db_data:/var/lib/postgresql/data
    networks:
      private_network:
        ipv4_address: 172.20.0.6

  nginx:
    container_name: nav_nginx
    image: nginx:1.19-alpine
    restart: on-failure
    ports:
      - 8000:8000
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/app/static
    depends_on:
      - postgres
      - backend
    working_dir: /app/
    networks:
      private_network:
        ipv4_address: 172.20.0.7
      default:

  redis:
    container_name: nav_redis
    image: redis:6.0-alpine3.12
    restart: on-failure
    depends_on:
      - backend
      - postgres
    networks:
      private_network:
        ipv4_address: 172.20.0.8
  
  qcluster:
    image: nav_info_backend
    container_name: nav_qcluster
    env_file: .env
    user: ${CURRENT_UID}
    volumes:
      - ./:/app/
    restart: on-failure
    entrypoint: python3
    command: ./manage.py qcluster
    depends_on:
      - backend
      - postgres
    networks:
      private_network:
        ipv4_address: 172.20.0.9

networks:
  private_network:
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

volumes:
  nav_db_data:
    external: True
